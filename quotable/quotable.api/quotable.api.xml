<?xml version="1.0"?>
<doc>
    <assembly>
        <name>quotable.api</name>
    </assembly>
    <members>
        <member name="T:quotable.api.Controllers.QuoteController">
            <summary>
            API controller for the '/quotes' resource.
            </summary>
        </member>
        <member name="M:quotable.api.Controllers.QuoteController.#ctor(quotable.core.RandomQuoteProvider,quotable.core.QuotableContext)">
            <summary>
            takes in a provider and assigns global provider variable to that provider
            </summary>
            <param name="provider"></param>
            <param name="context"></param>
        </member>
        <member name="M:quotable.api.Controllers.QuoteController.Get">
            <summary>
            Returns all the quotes.
            </summary>
            <returns>All the quotes.</returns>
        </member>
        <member name="M:quotable.api.Controllers.QuoteController.Get(System.Int64)">
            <summary>
            Gets a specific quote.
            </summary>
            <param name="id">The id of the quote to get.</param>
            <returns>The quote.</returns>
        </member>
        <member name="M:quotable.api.Controllers.QuoteController.Post(System.String)">
            <summary>
            unimplemented method that posts given string
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:quotable.api.Controllers.QuoteController.Put(System.Int32,System.String)">
            <summary>
            unimplemented value that puts from id and string
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:quotable.api.Controllers.QuoteController.Delete(System.Int32)">
            <summary>
            unimplemented error deleting by id
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:quotable.api.Controllers.RandomController">
            <summary>
            controller for random quote provider
            </summary>
        </member>
        <member name="M:quotable.api.Controllers.RandomController.#ctor(quotable.core.RandomQuoteProvider)">
            <summary>
            assigns global provider to passed in provider
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:quotable.api.Controllers.RandomController.Get">
            <summary>
            returns array of strings
            </summary>
            <returns></returns>
        </member>
        <member name="M:quotable.api.Controllers.RandomController.Get(System.Int32)">
            <summary>
            gets id, quote and author with provided id
            sets quotable data var
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:quotable.api.Controllers.RandomController.Post(System.String)">
            <summary>
            unimplemented method to post value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:quotable.api.Controllers.RandomController.Put(System.Int32,System.String)">
            <summary>
            unimplemented method that puts based on id and value
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:quotable.api.Controllers.RandomController.Delete(System.Int32)">
            <summary>
            unimplemented method that delets based on id
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:quotable.api.Controllers.RandomQuoteController">
            <summary>
            controller for random quote provider
            </summary>
        </member>
        <member name="M:quotable.api.Controllers.RandomQuoteController.#ctor(quotable.core.RandomQuoteProvider)">
            <summary>
            assigns global provider to passed in provider
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:quotable.api.Controllers.RandomQuoteController.Get">
            <summary>
            returns array of strings
            </summary>
            <returns></returns>
        </member>
        <member name="M:quotable.api.Controllers.RandomQuoteController.Get(System.Int32)">
            <summary>
            gets id, quote and author with provided id
            sets quotable data var
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:quotable.api.Controllers.RandomQuoteController.Post(System.String)">
            <summary>
            unimplemented method to post value
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:quotable.api.Controllers.RandomQuoteController.Put(System.Int32,System.String)">
            <summary>
            unimplemented method that puts based on id and value
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:quotable.api.Controllers.RandomQuoteController.Delete(System.Int32)">
            <summary>
            unimplemented method that delets based on id
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:quotable.api.Models.Author">
            <summary>
            Model for an author
            </summary>
        </member>
        <member name="P:quotable.api.Models.Author.FirstName">
            <summary>
            The first name of the author
            </summary>
        </member>
        <member name="P:quotable.api.Models.Author.LastName">
            <summary>
            The last name of the author
            </summary>
        </member>
        <member name="T:quotable.api.Models.QuotableData">
            <summary>
            Class to instantiate ID, Quote, and Author
            </summary>
        </member>
        <member name="P:quotable.api.Models.QuotableData.ID">
            <summary>
            instnantiate ID of type long
            </summary>
        </member>
        <member name="P:quotable.api.Models.QuotableData.Quote">
            <summary>
            instnantiate Quote of type string
            </summary>
        </member>
        <member name="P:quotable.api.Models.QuotableData.Author">
            <summary>
            instnantiate Author of type string
            </summary>
        </member>
        <member name="T:quotable.api.Models.Quote">
            <summary>
            Model for a quote
            </summary>
        </member>
        <member name="P:quotable.api.Models.Quote.Body">
            <summary>
            The title of the quote
            </summary>
        </member>
        <member name="T:quotable.api.Program">
            <summary>
            Class: Program creates a web host builder
            </summary>
        </member>
        <member name="M:quotable.api.Program.Main(System.String[])">
            <summary>
            Main: instantiates and runs the web host builder
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:quotable.api.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            second webhost builder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:quotable.api.Startup">
            <summary>
            instantiates the startup for all of the configurations
            </summary>
        </member>
        <member name="M:quotable.api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            stes global configuration to passed in config
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:quotable.api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure the services for the application.
            </summary>
            <param name="services">The collection of service.</param>
        </member>
        <member name="M:quotable.api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">The application builder</param>
            <param name="env">The hosting environment</param>
        </member>
    </members>
</doc>
